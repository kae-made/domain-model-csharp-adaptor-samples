// ------------------------------------------------------------------------------
// <auto-generated>
//     This file is generated by tool.
//     Runtime Version : 1.0.0
//  
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Kae.StateMachine;
using Kae.DomainModel.Csharp.Framework;
using Kae.DomainModel.Csharp.Framework.Adaptor.ExternalStorage;

namespace ProcessManagement
{
    partial class DomainClassRESStateMachine
    {
        protected void ActionFree()
        {
            // Action Description on Model as a reference.

            //  1 : SELECT one resourceAssigner RELATED BY SELF->RA[R6];
            //  2 : GENERATE RA2:'Resource Freed' TO resourceAssigner;

            // Line : 1
            var resourceAssigner = target.LinkedR6();

            // Line : 2
            if (instanceRepository.ExternalStorageAdaptor != null && instanceRepository.ExternalStorageAdaptor.DoseEventComeFromExternal())
            {
                changedStates.Add(new CEventChangedState() { OP = ChangedState.Operation.Create, Target = resourceAssigner, Event = DomainClassRAStateMachine.RA2_ResourceFreed.Create(receiver:resourceAssigner, false, sendNow:false) });
            }
            else
            {
                DomainClassRAStateMachine.RA2_ResourceFreed.Create(receiver:resourceAssigner, isSelfEvent:false, sendNow:true);
            }


        }

        protected void ActionBusy()
        {
            // Action Description on Model as a reference.



        }

    }
}

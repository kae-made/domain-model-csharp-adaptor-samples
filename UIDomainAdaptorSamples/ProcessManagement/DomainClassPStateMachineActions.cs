// ------------------------------------------------------------------------------
// <auto-generated>
//     This file is generated by tool.
//     Runtime Version : 1.0.0
//  
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using Kae.StateMachine;
using Kae.DomainModel.Csharp.Framework;

namespace ProcessManagement
{
    partial class DomainClassPStateMachine
    {
        protected void ActionPrepared(string Requester_ID, string Resource_ID)
        {
            // Action Description on Model as a reference.

            //   1 : SELECT ANY requester FROM INSTANCES OF REQ WHERE SELECTED.Requester_ID == rcvd_evt.Requester_ID;
            //   2 : SELECT ANY resource FROM INSTANCES OF RES WHERE SELECTED.Resource_ID == rcvd_evt.Resource_ID;
            //   3 : RELATE requester to resource ACROSS R1 USING SELF;
            //   4 : 
            //   5 : SELECT ANY orderSpec FROM INSTANCES OF OS WHERE SELECTED.Command == requester.Step1Command;
            //   6 : CREATE OBJECT INSTANCE processStep1 of PS;
            //   7 : processStep1.Number = 1;
            //   8 : processStep1.Finished = FALSE;
            //   9 : RELATE processStep1 TO orderSpec ACROSS R4;
            //  10 : RELATE SELF TO processStep1 ACROSS R2;
            //  11 : RELATE SELF TO processStep1 ACROSS R3;
            //  12 : 
            //  13 : SELECT ANY orderSpec FROM INSTANCES OF OS WHERE SELECTED.Command == requester.Step2Command;
            //  14 : CREATE OBJECT INSTANCE processStep2 of PS;
            //  15 : processStep2.Number = 2;
            //  16 : processStep2.Finished = FALSE;
            //  17 : RELATE processStep2 TO orderSpec ACROSS R4;
            //  18 : RELATE SELF TO processStep2 ACROSS R2;
            //  19 : CREATE OBJECT INSTANCE iWork12 of IntermediateWork;
            //  20 : RELATE processStep1 TO processStep2 ACROSS R5.'successor' USING iWork12;
            //  21 : 
            //  22 : SELECT ANY orderSpec FROM INSTANCES OF OS WHERE SELECTED.Command == requester.Step3Command;
            //  23 : CREATE OBJECT INSTANCE processStep3 of PS;
            //  24 : processStep3.Number = 3;
            //  25 : processStep3.Finished = FALSE;
            //  26 : RELATE processStep3 TO orderSpec ACROSS R4;
            //  27 : RELATE SELF TO processStep3 ACROSS R2;
            //  28 : CREATE OBJECT INSTANCE iWork23 of IntermediateWork;
            //  29 : RELATE processStep2 TO processStep3 ACROSS R5.'successor' USING iWork23;
            //  30 : 
            //  31 : RELATE SELF TO processStep1 ACROSS R7;
            //  32 : GENERATE P2:'Proceed Process Step' TO SELF;

            // Line : 1
            var requester = (DomainClassREQ)(instanceRepository.GetDomainInstances("REQ").Where(selected => ((((DomainClassREQ)selected).Attr_Requester_ID == Requester_ID))).FirstOrDefault());

            // Line : 2
            var resource = (DomainClassRES)(instanceRepository.GetDomainInstances("RES").Where(selected => ((((DomainClassRES)selected).Attr_Resource_ID == Resource_ID))).FirstOrDefault());

            // Line : 3
            // Relate requester - R1 -> resource USING SELF
            target.LinkR1(requester,resource);

            // Line : 5
            var orderSpec = (DomainClassOS)(instanceRepository.GetDomainInstances("OS").Where(selected => ((((DomainClassOS)selected).Attr_Command == ((DomainClassREQ)requester).Attr_Step1Command))).FirstOrDefault());

            // Line : 6
            var processStep1 = DomainClassPSBase.CreateInstance(instanceRepository, logger, changedStates);
            // Line : 7
            processStep1.Attr_Number = 1;
            // Line : 8
            processStep1.Attr_Finished = false;
            // Line : 9
            // processStep1 - R4 -> orderSpec;
            processStep1.LinkR4(orderSpec, changedStates);

            // Line : 10
            // SELF - R2 -> processStep1;
            processStep1.LinkR2(target, changedStates);

            // Line : 11
            // SELF - R3 -> processStep1;
            target.LinkR3FirstStep(processStep1, changedStates);

            // Line : 13
            orderSpec = (DomainClassOS)(instanceRepository.GetDomainInstances("OS").Where(selected => ((((DomainClassOS)selected).Attr_Command == ((DomainClassREQ)requester).Attr_Step2Command))).FirstOrDefault());

            // Line : 14
            var processStep2 = DomainClassPSBase.CreateInstance(instanceRepository, logger, changedStates);
            // Line : 15
            processStep2.Attr_Number = 2;
            // Line : 16
            processStep2.Attr_Finished = false;
            // Line : 17
            // processStep2 - R4 -> orderSpec;
            processStep2.LinkR4(orderSpec, changedStates);

            // Line : 18
            // SELF - R2 -> processStep2;
            processStep2.LinkR2(target, changedStates);

            // Line : 22
            orderSpec = (DomainClassOS)(instanceRepository.GetDomainInstances("OS").Where(selected => ((((DomainClassOS)selected).Attr_Command == ((DomainClassREQ)requester).Attr_Step3Command))).FirstOrDefault());

            // Line : 23
            var processStep3 = DomainClassPSBase.CreateInstance(instanceRepository, logger, changedStates);
            // Line : 24
            processStep3.Attr_Number = 3;
            // Line : 25
            processStep3.Attr_Finished = false;
            // Line : 26
            // processStep3 - R4 -> orderSpec;
            processStep3.LinkR4(orderSpec, changedStates);

            // Line : 27
            // SELF - R2 -> processStep3;
            processStep3.LinkR2(target, changedStates);

            // Line : 31
            // SELF - R7 -> processStep1;
            target.LinkR7CurrentStep(processStep1, changedStates);

            // Line : 32
            DomainClassPStateMachine.P2_ProceedProcessStep.Create(receiver:target, sendNow:true);


        }

        protected void ActionWorkingStep()
        {
            // Action Description on Model as a reference.

            //  1 : SELECT ONE currentProcessStep RELATED BY SELF->PS[R7.'current step'];
            //  2 : GENERATE PS1:Start TO currentProcessStep;

            // Line : 1
            var currentProcessStep = target.LinkedR7CurrentStep();

            // Line : 2
            DomainClassPSStateMachine.PS1_Start.Create(receiver:currentProcessStep, sendNow:true);


        }

        protected void ActionDone()
        {
            // Action Description on Model as a reference.

            //  1 : SELECT ONE requester RELATED BY SELF->REQ[R1.'is used by'];
            //  2 : GENERATE REQ3:Done TO requester;

            // Line : 1
            var requester = target.LinkedR1OneIsUsedBy();

            // Line : 2
            DomainClassREQStateMachine.REQ3_Done.Create(receiver:requester, sendNow:true);


        }

    }
}
